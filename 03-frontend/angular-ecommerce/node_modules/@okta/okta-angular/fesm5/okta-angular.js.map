{"version":3,"file":"okta-angular.js","sources":["../package/src/okta/models/okta.config.ts","../package/src/okta/packageInfo.ts","../package/src/okta/services/okta.service.ts","../package/src/okta/components/callback.component.ts","../package/src/okta/components/login-redirect.component.ts","../package/src/okta/okta.guard.ts","../package/src/okta/createService.ts","../package/src/okta/okta.module.ts"],"names":["tslib_1.__extends","tslib_1.__param"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuthService } from '../services/okta.service';\nimport { OktaAuthOptions } from '@okta/okta-auth-js';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuthService, injector: Injector) => void;\nexport type IsAuthenticatedFunction = (oktaAuth: OktaAuthService) => Promise<boolean>;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface OktaConfig extends OktaAuthOptions {\n  onAuthRequired?: AuthRequiredFunction;\n  testing?: TestingObject;\n  isAuthenticated?: IsAuthenticatedFunction;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\n","export default {\n  'name': '@okta/okta-angular',\n  'version': '3.0.1'\n};\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OKTA_CONFIG, OktaConfig } from '../models/okta.config';\n\n// eslint-disable-next-line node/no-unpublished-import\nimport packageInfo from '../packageInfo';\n\n/**\n * Import the okta-auth-js library\n */\nimport {\n  OktaAuth,\n  AuthState,\n  OktaAuthOptions,\n  isAbsoluteUrl,\n  toAbsoluteUrl,\n  toRelativeUrl,\n  SigninWithRedirectOptions\n} from '@okta/okta-auth-js';\n\nimport { Observable, Observer } from 'rxjs';\nimport { Location } from '@angular/common';\n\n@Injectable()\nexport class OktaAuthService extends OktaAuth {\n    private config: OktaConfig;\n    private observers: Observer<boolean>[];\n    private location?: Location;\n\n    $authenticationState: Observable<boolean>;\n\n    constructor(@Inject(OKTA_CONFIG) config: OktaConfig, @Optional() location?: Location, @Optional() router?: Router) {\n\n      // If a relative `redirectUri` was passed, convert to absolute URL, including base href, if any.\n      if (config.redirectUri && !isAbsoluteUrl(config.redirectUri) && location) {\n        const baseUri = window.location.origin + location.prepareExternalUrl('');\n        config.redirectUri = toAbsoluteUrl(config.redirectUri, baseUri);\n      }\n\n      const transformAuthState = async (oktaAuth: OktaAuth, authState: AuthState) => {\n        // if `isAuthenticated` was set on config, call it now to override the value of `authState.isAuthenticated`\n        if (config.isAuthenticated) {\n          authState.isAuthenticated = await config.isAuthenticated(this);\n        }\n        // if `transformAuthState` was set on config, call it now to transform the authState object\n        if (config.transformAuthState) {\n          authState = await config.transformAuthState(oktaAuth, authState);\n        }\n        return authState;\n      };\n      \n      // If a router is available, provide a default implementation of `restoreOriginalUri`\n      const restoreOriginalUri = (!config.restoreOriginalUri && router && location) ? async (oktaAuth: OktaAuth, originalUri: string) => {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri, baseUrl);\n        return router.navigateByUrl(routePath);\n      } : config.restoreOriginalUri;\n\n      const options: OktaAuthOptions = Object.assign({\n        transformAuthState,\n        restoreOriginalUri\n      }, config);\n\n      super(options);\n\n      this.config = config;\n      this.location = location;\n\n      // Customize user agent\n      this.userAgent = `${packageInfo.name}/${packageInfo.version} ${this.userAgent}`;\n\n      // Initialize observers\n      this.observers = [];\n      this.$authenticationState = new Observable((observer: Observer<boolean>) => { this.observers.push(observer); });\n\n      this.authStateManager.subscribe((authState: AuthState) => {\n        this.emitAuthenticationState(!!authState.isAuthenticated);\n      });\n      if (!this.token.isLoginRedirect()) {\n        // Trigger an initial change event to make sure authState is latest\n        this.authStateManager.updateAuthState();\n      }\n    }\n\n    private async emitAuthenticationState(state: boolean) {\n      this.observers.forEach(observer => observer.next(state));\n    }\n\n    async signInWithRedirect(options: SigninWithRedirectOptions = {}): Promise<void> {\n      const originalUri = options.originalUri || this.getOriginalUri();\n      if (!originalUri) {\n        // Default to the app base as a relative path.\n        options.originalUri = '/';\n      }\n      return super.signInWithRedirect(options);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n    async signOut(options?: any): Promise<void> {\n      options = options || {};\n      const postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri;\n      if (!postLogoutRedirectUri && this.location) {\n        // Default to the app base as an absolute URL, including base href, if any.\n        options.postLogoutRedirectUri = window.location.origin + this.location.prepareExternalUrl('/'); // include trailing slash\n      }\n      return super.signOut(options);\n    }\n\n    /**\n     * Returns the configuration object used.\n     */\n    getOktaConfig(): OktaConfig {\n      return this.config;\n    }\n\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(private okta: OktaAuthService, private router: Router) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.okta.handleLoginRedirect();\n    } catch (e) {\n      this.error = e.toString();\n    }\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({ template: `` })\nexport class OktaLoginRedirectComponent implements OnInit {\n  constructor(private okta: OktaAuthService) {}\n  ngOnInit(): void {\n    const originalUri = this.okta.getOriginalUri();\n    if (!originalUri) {\n      this.okta.setOriginalUri('/');\n    }\n    this.okta.signInWithRedirect();\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  NavigationStart\n} from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { AuthState } from '@okta/okta-auth-js';\n\nimport { OktaAuthService } from './services/okta.service';\nimport { AuthRequiredFunction } from './models/okta.config';\n\n@Injectable()\nexport class OktaAuthGuard implements CanActivate, CanActivateChild {\n  private route: ActivatedRouteSnapshot;\n  private state: RouterStateSnapshot;\n\n  constructor(private oktaAuth: OktaAuthService, private injector: Injector) { \n    // Unsubscribe updateAuthStateListener when route change\n    const router = injector.get(Router);\n    router.events.pipe(\n      filter((e: Event) => e instanceof NavigationStart && this.state && this.state.url !== e.url)\n    ).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    // Track states for current route\n    this.route = route;\n    this.state = state;\n\n    // Protect the route after accessing\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    await this.handleLogin(state.url);\n\n    return false;\n  }\n\n  async canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    return this.canActivate(route, state);\n  }\n\n  private async handleLogin(fromUri: string): Promise<void> {\n     // Get the operation to perform on failed authentication from\n     // either the global config or route data injection.\n    const onAuthRequired: AuthRequiredFunction = this.route.data['onAuthRequired'] || this.oktaAuth.getOktaConfig().onAuthRequired;\n    \n    // Store the current path\n    this.oktaAuth.setOriginalUri(fromUri);\n\n    if (onAuthRequired) {\n      onAuthRequired(this.oktaAuth, this.injector);\n    } else {\n      this.oktaAuth.signInWithRedirect();\n    }\n  }\n\n  private updateAuthStateListener = (authState: AuthState) => {\n    if (!authState.isAuthenticated) {\n      this.handleLogin(this.state.url);\n    }\n  };\n\n}\n","import { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaConfig } from './models/okta.config';\nimport { OktaAuthService } from './services/okta.service';\n\nexport function createOktaService(config: OktaConfig, location?: Location, router?: Router): OktaAuthService {\n  return new OktaAuthService(config, location, router);\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaCallbackComponent } from './components/callback.component';\nimport { OktaLoginRedirectComponent } from './components/login-redirect.component';\nimport { OktaAuthService } from './services/okta.service';\nimport { OktaAuthGuard } from './okta.guard';\nimport { OKTA_CONFIG } from './models/okta.config';\nimport { createOktaService } from './createService';\n\n@NgModule({\n  declarations: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  exports: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  providers: [\n    OktaAuthGuard,\n    {\n      provide: OktaAuthService,\n      useFactory: createOktaService,\n      deps: [\n        OKTA_CONFIG,\n        Location, // optional\n        Router // optional\n      ]\n    }\n  ]\n})\nexport class OktaAuthModule {\n\n}\n"]}