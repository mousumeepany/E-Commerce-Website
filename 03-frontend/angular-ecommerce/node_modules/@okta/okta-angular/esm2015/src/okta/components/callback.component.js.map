{"version":3,"file":"callback.component.js","sources":["../../../package/src/okta/components/callback.component.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;;;AAK3D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;AAAG,IAGnC,YAAoB,IAAqB,EAAU,MAAc;AAAI,QAAjD,SAAI,GAAJ,IAAI,CAAiB;AAAC,QAAS,WAAM,GAAN,MAAM,CAAQ;AAAC,IAAE,CAAC;AACvE,IACQ,QAAQ;AAAK;AAEwB,YADzC,IAAI;AACR,gBAAM,4GAA4G;AAClH,gBAAM,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC5C,aAAK;AAAC,YAAA,OAAO,CAAC,EAAE;AAChB,gBAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AAChC,aAAK;AACL,QAAE,CAAC;AAEH,KAFG;AACH,CAAC;;;;;;;;;6BAAA;AAbY,qBAAqB,4BAHjC,SAAS,CAAC,UACT,QAAQ,EAAE,sBAAsB,MACjC,CAAC,hEACE,0CAGwB,eAAe,EAAkB,MAAM;AAAG,GAHzD,qBAAqB,CAajC;;;;;;kGACD;AAAC,SAdY,qBAAqB;AAAI","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(private okta: OktaAuthService, private router: Router) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.okta.handleLoginRedirect();\n    } catch (e) {\n      this.error = e.toString();\n    }\n  }\n}\n"]}