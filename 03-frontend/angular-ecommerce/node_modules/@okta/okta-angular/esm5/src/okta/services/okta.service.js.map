{"version":3,"file":"okta.service.js","sources":["../../../../src/okta/services/okta.service.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OKTA_CONFIG, OktaConfig } from '../models/okta.config';\n\n// eslint-disable-next-line node/no-unpublished-import\nimport packageInfo from '../packageInfo';\n\n/**\n * Import the okta-auth-js library\n */\nimport {\n  OktaAuth,\n  AuthState,\n  OktaAuthOptions,\n  isAbsoluteUrl,\n  toAbsoluteUrl,\n  toRelativeUrl,\n  SigninWithRedirectOptions\n} from '@okta/okta-auth-js';\n\nimport { Observable, Observer } from 'rxjs';\nimport { Location } from '@angular/common';\n\n@Injectable()\nexport class OktaAuthService extends OktaAuth {\n    private config: OktaConfig;\n    private observers: Observer<boolean>[];\n    private location?: Location;\n\n    $authenticationState: Observable<boolean>;\n\n    constructor(@Inject(OKTA_CONFIG) config: OktaConfig, @Optional() location?: Location, @Optional() router?: Router) {\n\n      // If a relative `redirectUri` was passed, convert to absolute URL, including base href, if any.\n      if (config.redirectUri && !isAbsoluteUrl(config.redirectUri) && location) {\n        const baseUri = window.location.origin + location.prepareExternalUrl('');\n        config.redirectUri = toAbsoluteUrl(config.redirectUri, baseUri);\n      }\n\n      const transformAuthState = async (oktaAuth: OktaAuth, authState: AuthState) => {\n        // if `isAuthenticated` was set on config, call it now to override the value of `authState.isAuthenticated`\n        if (config.isAuthenticated) {\n          authState.isAuthenticated = await config.isAuthenticated(this);\n        }\n        // if `transformAuthState` was set on config, call it now to transform the authState object\n        if (config.transformAuthState) {\n          authState = await config.transformAuthState(oktaAuth, authState);\n        }\n        return authState;\n      };\n      \n      // If a router is available, provide a default implementation of `restoreOriginalUri`\n      const restoreOriginalUri = (!config.restoreOriginalUri && router && location) ? async (oktaAuth: OktaAuth, originalUri: string) => {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri, baseUrl);\n        return router.navigateByUrl(routePath);\n      } : config.restoreOriginalUri;\n\n      const options: OktaAuthOptions = Object.assign({\n        transformAuthState,\n        restoreOriginalUri\n      }, config);\n\n      super(options);\n\n      this.config = config;\n      this.location = location;\n\n      // Customize user agent\n      this.userAgent = `${packageInfo.name}/${packageInfo.version} ${this.userAgent}`;\n\n      // Initialize observers\n      this.observers = [];\n      this.$authenticationState = new Observable((observer: Observer<boolean>) => { this.observers.push(observer); });\n\n      this.authStateManager.subscribe((authState: AuthState) => {\n        this.emitAuthenticationState(!!authState.isAuthenticated);\n      });\n      if (!this.token.isLoginRedirect()) {\n        // Trigger an initial change event to make sure authState is latest\n        this.authStateManager.updateAuthState();\n      }\n    }\n\n    private async emitAuthenticationState(state: boolean) {\n      this.observers.forEach(observer => observer.next(state));\n    }\n\n    async signInWithRedirect(options: SigninWithRedirectOptions = {}): Promise<void> {\n      const originalUri = options.originalUri || this.getOriginalUri();\n      if (!originalUri) {\n        // Default to the app base as a relative path.\n        options.originalUri = '/';\n      }\n      return super.signInWithRedirect(options);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n    async signOut(options?: any): Promise<void> {\n      options = options || {};\n      const postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri;\n      if (!postLogoutRedirectUri && this.location) {\n        // Default to the app base as an absolute URL, including base href, if any.\n        options.postLogoutRedirectUri = window.location.origin + this.location.prepareExternalUrl('/'); // include trailing slash\n      }\n      return super.signOut(options);\n    }\n\n    /**\n     * Returns the configuration object used.\n     */\n    getOktaConfig(): OktaConfig {\n      return this.config;\n    }\n\n}\n"]}